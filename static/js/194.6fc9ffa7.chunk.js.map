{"version":3,"file":"static/js/194.6fc9ffa7.chunk.js","mappings":"mJACA,SAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,SAAW,0BAA0B,YAAc,8B,uBCGnS,MAYA,EAZoBA,IAElB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,oEAAoEC,IAAI,MACjFF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAIZ,EAAKO,SAAER,EAAMc,SAEtB,ECHV,EANiBd,IAETS,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAEU,QAAQP,SAAER,EAAMe,U,sDCD1C,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IActBC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,wBAAhBD,EAbbnB,IAElBG,EAAAA,EAAAA,MAAA,QAAMkB,SAAUrB,EAAMsB,aAAclB,UAAWC,EAAEkB,WAAWf,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAEmB,SAAShB,UACzBC,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,MAAQ,WAAWC,UAAWC,EAAAA,EAAcC,SAAY,CAACC,EAAAA,EAAUd,GAAcF,KAAO,iBAAiBiB,YAAY,0BAG9HtB,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAE2B,YAAYxB,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBC0B7C,EA7BiBR,IACf,IAAIiC,EAAQjC,EAAMkC,YASf,IAAKlC,EAAMmC,OAAQ,OAAO1B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAQ,CAAEvB,GAAI,WAC5C,IAAIwB,EAAkBJ,EAAMK,QAAQC,KAAKC,IAAM/B,EAAAA,EAAAA,KAACgC,EAAU,CAAC3B,KAAM0B,EAAE1B,KAAMZ,GAAIsC,EAAEtC,OAC3EwC,EAAkBT,EAAMU,SAASJ,KAAKK,IAAMnC,EAAAA,EAAAA,KAACoC,EAAO,CAAC9B,QAAS6B,EAAE7B,QAASb,GAAI0C,EAAE1C,OACnF,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEiC,QAAQ9B,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAEyC,YAAYtC,SAC3B6B,KAEHlC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEsC,SAASnC,SAAA,CACxBkC,GAEDjC,EAAAA,EAAAA,KAACS,EAAmB,CAACG,SAjBN0B,IAEpB/C,EAAMgD,YAAYD,EAAOE,eAAe,SAmBjC,E,wBCLV,SAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAtBqBlB,IACd,CACLC,YAAaD,EAAMC,gBAIGkB,IACjB,CAELJ,YAAcC,IACZG,GAASC,EAAAA,EAAAA,GAAwBJ,GAAgB,MAarDK,EAAAA,EAFF,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__+v3q8\",\"dialogItems\":\"Dialogs_dialogItems__zrDzX\",\"dialog\":\"Dialogs_dialog__dHVEP\",\"messages\":\"Dialogs_messages__qDF1I\",\"message\":\"Dialogs_message__5hUG8\",\"newMessage\":\"Dialogs_newMessage__jUGKP\",\"textType\":\"Dialogs_textType__cKnAr\",\"textTypeBtn\":\"Dialogs_textTypeBtn__3ckVR\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n \r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active} >\r\n      <img src=\"https://pbs.twimg.com/media/GPrpm6fWMAA5G7r?format=jpg&name=large\" alt=\"\" />\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import { Field, reduxForm } from 'redux-form'\r\nimport s from './Dialogs.module.css'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport FormControl from '../common/FormsControls/FormsControls';\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit} className={s.newMessage}>\r\n      <div className={s.textType}>\r\n        <Field child = 'textarea' component={FormControl}  validate = {[required, maxLength50]} name = \"newMessageBody\" placeholder=\"Enter your message\"/>\r\n        {/* <textarea onChange={onMessageChange} ref={newMessageElement} value={state.newMessageText} /> */}\r\n      </div>\r\n      <div className={s.textTypeBtn}><button>Send</button></div>\r\n    </form>   \r\n    )\r\n   \r\n  }\r\n  \r\n  export const AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"}) (AddMessageForm)","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { AddMessageFormRedux } from './AddMessageForm'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let newMessageElement = React.createRef();\r\n\r\n  let addNewMessage = (values) => {\r\n    // из name Filed\r\n   props.sendMessage(values.newMessageBody)\r\n\r\n  }\r\n  \r\n     if (!props.isAuth) return <Navigate  to={\"/login\"}/>\r\n  let dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} id={d.id} />)\r\n  let messagesElement = state.messages.map((m) => <Message message={m.message} id={m.id} />)\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElement}\r\n       \r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        \r\n      </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { addMessageActionCreator } from '../../redux/DialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody));\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent);\r\n// export default DialogsContainer\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)  //Возьми диалогс -> закинь в ф-ю withAuthRedirect -> получи результат и рез-тат закинь в connect(mapStateToProps, mapDispatchToProps) \r\n"],"names":["props","path","id","_jsxs","className","s","dialog","active","children","_jsx","src","alt","NavLink","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","newMessage","textType","Field","child","component","FormControl","validate","required","placeholder","textTypeBtn","state","dialogsPage","isAuth","Navigate","dialogsElements","dialogs","map","d","DialogItem","messagesElement","messages","m","Message","dialogItems","values","sendMessage","newMessageBody","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}